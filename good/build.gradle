apply from: "${rootProject.rootDir}/common_config.gradle"
if (project.ext.assembleType.equals("2")) {
    apply plugin: 'com.android.application'
} else {
    apply plugin: 'com.android.library'
}
apply plugin: 'android-apt'
apply plugin: 'com.jakewharton.butterknife'

android {
    compileSdkVersion project.ext.compileSdkVersion
    buildToolsVersion project.ext.buildToolsVersion

    defaultConfig {
        minSdkVersion project.ext.minSdkVersion
        targetSdkVersion project.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        resourcePrefix "good"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main {
            if (project.ext.assembleType.equals("2")) {
                manifest.srcFile 'src/debug/AndroidManifest.xml'
                res.srcDirs = ['src/debug/res']
            } else {
                manifest.srcFile 'src/release/AndroidManifest.xml'
                res.srcDirs = ['src/main/res']
                java {
                    exclude 'src/debug/**'
                }
            }
        }
    }

}

repositories {
    flatDir {
        dirs 'libs'
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testCompile 'junit:junit:4.12'
    if (project.ext.assembleType.equals("2")) {
        compile project(':core')
        compile "com.android.support:appcompat-v7:${project.ext.supportVersion}"

        apt "org.lzh.compiler.parceler:parceler-compiler:${project.ext.parcelerVersion}"
        compile "org.lzh.compiler.parceler:parceler-api:${project.ext.parcelerVersion}"

        compile "com.github.yjfnypeu.Router:router-api:${project.ext.routerVersion}"
        apt "com.github.yjfnypeu.Router:router-compiler:${project.ext.routerVersion}"

        compile "com.jakewharton:butterknife:${project.ext.butterknifeVersion}"
        apt "com.jakewharton:butterknife-compiler:${project.ext.butterknifeVersion}"
    } else if (project.ext.assembleType.equals("1")) {
        provided project(':core')
        provided "com.android.support:appcompat-v7:${project.ext.supportVersion}"

        apt "org.lzh.compiler.parceler:parceler-compiler:${project.ext.parcelerVersion}"
        provided "org.lzh.compiler.parceler:parceler-api:${project.ext.parcelerVersion}"

        provided "com.github.yjfnypeu.Router:router-api:${project.ext.routerVersion}"
        apt "com.github.yjfnypeu.Router:router-compiler:${project.ext.routerVersion}"

        provided "com.jakewharton:butterknife:${project.ext.butterknifeVersion}"
        apt "com.jakewharton:butterknife-compiler:${project.ext.butterknifeVersion}"
    } else {
        provided(name: 'core-release', ext: 'aar')
        provided "com.android.support:appcompat-v7:${project.ext.supportVersion}"

        apt "org.lzh.compiler.parceler:parceler-compiler:${project.ext.parcelerVersion}"
        provided "org.lzh.compiler.parceler:parceler-api:${project.ext.parcelerVersion}"

        provided "com.github.yjfnypeu.Router:router-api:${project.ext.routerVersion}"
        apt "com.github.yjfnypeu.Router:router-compiler:${project.ext.routerVersion}"

        provided "com.jakewharton:butterknife:${project.ext.butterknifeVersion}"
        apt "com.jakewharton:butterknife-compiler:${project.ext.butterknifeVersion}"
    }
}
